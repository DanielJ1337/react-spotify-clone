[{"/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/reducer.js":"1","/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/Player.js":"2","/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/Footer.js":"3","/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/SidebarOption.js":"4","/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/App.js":"5","/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/spotify.js":"6","/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/Body.js":"7","/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/SongRow.js":"8","/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/Sidebar.js":"9","/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/DataLayer.js":"10","/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/Login.js":"11"},{"size":782,"mtime":1611914661000,"results":"12","hashOfConfig":"13"},{"size":529,"mtime":1611912620000,"results":"14","hashOfConfig":"13"},{"size":2809,"mtime":1611913491000,"results":"15","hashOfConfig":"13"},{"size":314,"mtime":1611409487000,"results":"16","hashOfConfig":"13"},{"size":1825,"mtime":1611476592000,"results":"17","hashOfConfig":"13"},{"size":1052,"mtime":1611914516000,"results":"18","hashOfConfig":"13"},{"size":2845,"mtime":1611914220000,"results":"19","hashOfConfig":"13"},{"size":797,"mtime":1611915246000,"results":"20","hashOfConfig":"13"},{"size":1174,"mtime":1611914802000,"results":"21","hashOfConfig":"13"},{"size":453,"mtime":1611403332000,"results":"22","hashOfConfig":"13"},{"size":466,"mtime":1611382184000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"54j8o4",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/reducer.js",[],"/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/Player.js",[],["49","50"],"/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/Footer.js",["51","52","53"],"/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/SidebarOption.js",[],"/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/App.js",["54"],"import { useEffect } from \"react\";\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport { useDataLayerValue } from \"./components/DataLayer\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport \"./styles/App.css\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  // const [token, setToken] = useState(null);\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  // Hook in React which fires when a certain condition is met\n  // the [] at the end means that the hook is just firing once\n  // when the source is loading\n  // you also can insert a certain variable so it checks if this\n  // variable is changed and then fires the function / hook again\n\n  //I need the generated token from the authentication sequence to be able to\n  // work with the spotify API\n\n  useEffect(() => {\n    // code...\n\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist(\"37i9dQZEVXcRCKwbcHRAXt\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/spotify.js",[],"/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/Body.js",["55","56"],"import React, { useState } from \"react\";\n\nimport \"../styles/body.css\";\nimport Header from \"./Header\";\nimport SongRow from \"./SongRow\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\n\nconst Body = ({ spotify }) => {\n  const [{ discover_weekly }, dispatch] = useDataLayerValue();\n  const [playState, setPlayState] = useState();\n\n  const playPlaylist = (id) => {\n    spotify\n      .play({\n        context_uri: `spotify:playlist:37i9dQZEVXcJZyENOWUFo7`,\n      })\n      .then((res) => {\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          });\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          });\n        });\n      });\n  };\n\n  const playSong = (id) => {\n    spotify\n      .play({\n        uris: [`spotify:track:${id}`],\n      })\n      .then((res) => {\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          });\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          });\n        });\n      });\n  };\n\n  return (\n    <div className=\"body\">\n      <Header spotify={spotify} />\n\n      <div className=\"body__info\">\n        <img src={discover_weekly?.images[0].url} alt=\"discover\" />\n        <div className=\"body__infoText\">\n          <strong>PLAYLIST</strong>\n          <h2>Discover Weekly</h2>\n          <p>{discover_weekly?.description}</p>\n        </div>\n      </div>\n\n      <div className=\"body__songs\">\n        <div className=\"body__icons\">\n          <PlayCircleFilledIcon\n            className=\"body__play-icon\"\n            onClick={playPlaylist}\n          />\n          <FavoriteBorderOutlinedIcon fontSize=\"large\" />\n          <MoreHorizIcon />\n        </div>\n\n        <div className=\"body__tableHeader\">\n          <div className=\"body__hash\">#</div>\n          <div className=\"body__title\">Title</div>\n          <div className=\"body__albumName\">Album</div>\n          <div className=\"body__dateAdded\">Date Added</div>\n          <div className=\"body__timeIcon\">\n            <ScheduleIcon />\n          </div>\n          <hr />\n        </div>\n\n        {/* The list of songs gets rendered */}\n        <div className=\"body__songList\">\n          {discover_weekly?.tracks.items.map((item) => (\n            <SongRow\n              id={new Date().getTime().toString()}\n              playSong={playSong}\n              track={item.track}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Body;\n","/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/SongRow.js",[],"/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/Sidebar.js",["57"],"/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/DataLayer.js",[],"/Users/DanielJ/Desktop/Desktop/Coding-Projects/App Development/React-Spotify-Clone/spotify-clone-first/src/components/Login.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":15,"column":12,"nodeType":"64","messageId":"65","endLine":15,"endColumn":17},{"ruleId":"62","severity":1,"message":"66","line":15,"column":19,"nodeType":"64","messageId":"65","endLine":15,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":31,"column":6,"nodeType":"69","endLine":31,"endColumn":15,"suggestions":"70"},{"ruleId":"62","severity":1,"message":"71","line":13,"column":12,"nodeType":"64","messageId":"65","endLine":13,"endColumn":16},{"ruleId":"62","severity":1,"message":"72","line":14,"column":10,"nodeType":"64","messageId":"65","endLine":14,"endColumn":19},{"ruleId":"62","severity":1,"message":"73","line":14,"column":21,"nodeType":"64","messageId":"65","endLine":14,"endColumn":33},{"ruleId":"62","severity":1,"message":"74","line":10,"column":25,"nodeType":"64","messageId":"65","endLine":10,"endColumn":33},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'item' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["77"],"'user' is assigned a value but never used.","'playState' is assigned a value but never used.","'setPlayState' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [dispatch, spotify]",{"range":"80","text":"81"},[1013,1022],"[dispatch, spotify]"]